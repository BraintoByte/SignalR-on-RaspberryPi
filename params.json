{"name":"Signalr-on-raspberrypi","tagline":"Sample code of ASP.NET SignalR OWIN Self Hosting console app which can run on Raspberry Pi!","body":"What's this? / これは何か?\r\n======================\r\n\r\nThis is  the sample code of ASP.NET SignalR OWIN Self Hosting console app which can run on Raspberry Pi.\r\n\r\nこれは、Raspberry Pi 上でも実行可能な、OWIN セルフホスティングによる ASP.NET SignalR コンソールアプリのサンプルコードです。\r\n\r\nDemonstration Video / デモ動画\r\n---------------------------------\r\n[![figure01](images/video-thumbnail.png) ](http://youtu.be/NHVvPBlqMmE)\r\n\r\nQuick Start / 試してみよう\r\n---------------------\r\n1. Get a \"Raspberry Pi\" (and if you prefer, get a Wireless Network USB adapter)  \r\n\"Raspberry Pi\"を購入します (お好みで、無線LANのUSBドングルも購入します)  \r\n![figure1](images/figure1.png) \r\n2. Install OS \"Raspbian\" and configure internet connection.  \r\nOS \"Raspbian\" をインストールし、インターネット接続を構成します。\r\n3. Wire up the logic taht is follow diagram on the solderless breadboard  \r\n下図の回路をブレッドボード上に配線します。  \r\n![figure2](images/figure2.png)  \r\n(Download \"[SignalR-on-RaspPi.fzz](http://fritzing.org/media/fritzing-repo/projects/s/signalr-on-rasppi-sample-board/fritzing/SignalR-on-RaspPi.fzz)\")\r\n4. Enter following commands on shell of the Raspberry Pi.  \r\n下記のコマンドを Raspberry Pi のシェルに入力します。  \r\n```\r\n$ sudo apt-get update  \r\n$ sudo apt-get upgrade  \r\n$ sudo apt-get install mono-complete\r\n$ wget...\r\n```\r\n5. Open the URL \"http://*{IP Address of Raspberry Pi}*\" by any modern web browsers on the PC that you prefer, or any modern SmartPhones.  \r\nお好みのPC上の近代的Webブラウザ、または近代的なスマートフォーンで、URL  \"http://*{Raspberry Pi の IP アドレス}*\"を開きます。\r\n\r\nHow to build? / ビルド方法\r\n===========================\r\n\r\nRequirements / 要件\r\n---------------------\r\n- Windows OS\r\n- Visual Studio 2013\r\n\r\n> (*) It may can build other OS/build tools, also only command line tools, but I don't have tried it.  \r\n> ※ 他のOS/ビルドツール、コマンドラインツールのみでもビルド可能かと思いますが、自分は試していません。\r\n\r\nSteps / 手順\r\n----------------\r\n\r\nEnter follow commands in command prompt.\r\n\r\nコマンドプロンプトで、以下のコマンドを実行します。\r\n\r\n```\r\n> git clone git@github.com:sample-by-jsakamoto/SignalR-on-RaspberryPi.git\r\n> cd SignalR-on-RaspberryPi\r\n> start SignalR-on-RaspPi.sln\r\n```\r\n\r\nThen Visual Studio is lauched, type ```Ctrl + Shift + B``` key.  \r\nAfter that, you get out put files at myapp/bin/debug folder.\r\n\r\nVisual Studio が起動するので、```Ctrl + Shift + B``` キーを押します。  \r\nそうすると、myapp/bin/debug フォルダに出力ファイルが得られます。\r\n\r\nHow to deploy to Raspberry pi? / Raspberry pi への配置方法\r\n===========================\r\n\r\nSteps / 手順\r\n----------------\r\nTransfer all out put files to Raspberry pi.\r\n\r\nすべての出力ファイルを Raspberry pi に転送します。\r\n\r\n**Example/例**\r\n```\r\n> cd myapp/bin/debug\r\n> scp -r * pi@<IP address of RaspPi>:/home/pi/\r\n```\r\n\r\n> (*) Tips - you can ran scp command and ssh command if you installed git for windows. These commands will be on ```C:\\Program Files (x86)\\Gin\\bin``` folder.  \r\n> ※Tips - git for Windows をインストール済みなら、scp コマンドや ssh コマンドを使えます。それらのコマンドは、```C:\\Program Files (x86)\\Gin\\bin``` フォルダにあることでしょう。\r\n\r\nNext, at the console of on Raspberry pi, enter follow commands.\r\n\r\n次に、Raspberry pi のコンソール上で、以下のコマンドを入力します。\r\n\r\n```\r\n$ cd /home/pi\r\n$ sudo mono myapp.exe\r\n```\r\n\r\nAfter that, you can access ```http://<IP address of Raspberry pi>/``` with any modern web browsers.\r\n\r\n以上で、任意のモダン Web ブラウザで ```http://<Raspberry piのIPアドレス>/index.html``` にアクセスすることが可能です。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}